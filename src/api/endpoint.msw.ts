/**
 * Generated by orval v7.1.1 🍺
 * Do not edit manually.
 * Customer Data API
 * OpenAPI spec version: 1.0.0
 */
import { faker } from "@faker-js/faker";
import { HttpResponse, delay, http } from "msw";
import type { GetCustomers200Item } from "./endpoint.schemas";

export const getGetCustomersResponseMock = (): GetCustomers200Item[] =>
  Array.from(
    { length: faker.number.int({ min: 1, max: 10 }) },
    (_, i) => i + 1,
  ).map(() => ({
    month: faker.helpers.arrayElement([faker.word.sample(), undefined]),
    newCustomers: faker.helpers.arrayElement([
      faker.number.int({ min: undefined, max: undefined }),
      undefined,
    ]),
    upCrossSelling: faker.helpers.arrayElement([
      faker.number.int({ min: undefined, max: undefined }),
      undefined,
    ]),
  }));

export const getGetCustomersMockHandler = (
  overrideResponse?:
    | GetCustomers200Item[]
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0],
      ) => Promise<GetCustomers200Item[]> | GetCustomers200Item[]),
) => {
  return http.get("*/customers", async (info) => {
    await delay(1000);

    return new HttpResponse(
      JSON.stringify(
        overrideResponse !== undefined
          ? typeof overrideResponse === "function"
            ? await overrideResponse(info)
            : overrideResponse
          : getGetCustomersResponseMock(),
      ),
      { status: 200, headers: { "Content-Type": "application/json" } },
    );
  });
};
export const getCustomerDataAPIMock = () => [getGetCustomersMockHandler()];
